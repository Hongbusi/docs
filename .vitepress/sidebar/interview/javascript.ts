export default {
  text: 'JavaScript',
  items: [
    { text: '数据类型', link: '/interview/javascript/data-type' },
    { text: '字符串常用方法', link: '/interview/javascript/string-api' },
    { text: '数组常用方法', link: '/interview/javascript/array-api' },
    { text: '对象常用方法', link: '/interview/javascript/object-api' },
    { text: '深拷贝浅拷贝', link: '/interview/javascript/copy' },
    { text: '闭包', link: '/interview/javascript/closure' },
    { text: '作用域链', link: '/interview/javascript/scope' },
    { text: '从原型到原型链', link: '/interview/javascript/prototype' },
    { text: '继承', link: '/interview/javascript/inherit' },
    { text: 'this', link: '/interview/javascript/this' },
    { text: '事件模型', link: '/interview/javascript/event-model' },
    { text: '事件代理', link: '/interview/javascript/event-agent' },
    { text: '事件循环', link: '/interview/javascript/event-loop' },
    { text: 'typeof 与 instanceof 区别', link: '/interview/javascript/typeof-instanceof' },
    { text: 'new 操作符', link: '/interview/javascript/new' },
    { text: 'ajax 原理', link: '/interview/javascript/ajax' },
    { text: 'bind、call、apply', link: '/interview/javascript/bind-call-apply' },
    { text: '执行上下文和执行栈', link: '/interview/javascript/context-stack' },
    { text: 'DOM', link: '/interview/javascript/dom' },
    { text: 'BOM', link: '/interview/javascript/bom' },
    { text: '内存泄漏', link: '/interview/javascript/memory-leak' },
    { text: '防抖、节流', link: '/interview/javascript/debounce-throttle' },
    { text: '函数缓存', link: '/interview/javascript/function-cache' },
    { text: '函数式编程', link: '/interview/javascript/functional-programming' },
    { text: '本地存储', link: '/interview/javascript/cache' },
    { text: '断点续传', link: '/interview/javascript/continue-to-upload' }
  ]
}
