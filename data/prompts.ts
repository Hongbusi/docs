import type { Prompt } from '@/types'

export const prompts: Prompt[] = [
  {
    id: '1',
    title: '网站生成提示词',
    description: '用于生成完整HTML网页的详细提示词，包含产品设计、UI设计和前端开发流程',
    content: `请根据我的描述创建一个完整的 HTML 网页。我想生成的网站是：{输入你的网站要求，比如一个B站up主查看后台数据的看板，包含不同类型的数据图表}

## 工作流程

1. 请先作为具有20年经验的，受乔布斯和张小龙夸赞的出色产品经理，穿透用户的需求表述，洞悉他想到以及没想到的可能需求，形成更完成充分的网站设计需求
2. 获取需求后，请作为一个吹毛求疵的在Apple Inc.工作过20年的出色设计师，用你能所想象的最好的设计去实现产品经理的需求，输出详细的前端能轻松理解的需求文档
3. 作为出色的前端工程师，充分思考产品经理和设计师所表达的需求，一步步完整实现需要的所有代码。

## 前端HTML代码要求：

1. 使用现代HTML5结构
2. 通过CDN引入Google Fonts字体
3. 图标使用Font Awesome CDN
4. 响应式设计，适配移动设备
5. 当网站设计需要图片时，可以使用以下可靠的图片源：
  - Unsplash: https://images.unsplash.com/ (例如: https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800)
  - Picsum: https://picsum.photos/ (例如: https://picsum.photos/800/600)
6. 思考这个主体网站best practice所采用的色彩、布局方案，并加以借鉴与设计
7. 选择和网站主题相匹配的字体
8. 使用语义化标签（header/main/footer等）
9. 包含内联CSS样式，使网页美观`,
    tags: ['网站开发', 'HTML', '产品设计', 'UI设计'],
    category: '开发工具',
  },
  {
    id: '2',
    title: 'API文档生成器',
    description: '自动生成清晰、详细的API文档，包含请求示例和响应格式',
    content: `请为以下API生成详细的文档：

## API信息
- 接口名称: {接口名称}
- 请求方法: {GET/POST/PUT/DELETE}
- 接口地址: {URL}

## 文档要求：
1. 详细的接口描述和用途
2. 请求参数说明（包含类型、是否必需、示例值）
3. 请求头信息
4. 响应数据格式和字段说明
5. 错误码和错误信息
6. 请求示例（包含cURL、JavaScript、Python等）
7. 响应示例（成功和失败情况）
8. 注意事项和最佳实践`,
    tags: ['API', '文档', '开发', '后端'],
    category: '文档工具',
  },
  {
    id: '3',
    title: '代码审查助手',
    description: '专业的代码审查提示词，帮助发现代码问题并提供改进建议',
    content: `请对以下代码进行专业的代码审查：

\`\`\`
{粘贴需要审查的代码}
\`\`\`

## 审查要点：
1. **代码质量**：检查代码结构、可读性和维护性
2. **性能优化**：识别潜在的性能问题和优化点
3. **安全性**：查找安全漏洞和风险点
4. **最佳实践**：是否遵循语言和框架的最佳实践
5. **错误处理**：异常处理是否完善
6. **测试覆盖**：是否需要添加测试用例
7. **文档注释**：代码注释是否清晰完整

请提供：
- 发现的问题列表（按优先级排序）
- 具体的改进建议和示例代码
- 重构建议（如果需要）`,
    tags: ['代码审查', '质量', '优化', '安全'],
    category: '开发工具',
  },
  {
    id: '4',
    title: '代码审查助手',
    description: '专业的代码审查提示词，帮助发现代码问题并提供改进建议',
    content: `请对以下代码进行专业的代码审查：

\`\`\`
{粘贴需要审查的代码}
\`\`\`

## 审查要点：
1. **代码质量**：检查代码结构、可读性和维护性
2. **性能优化**：识别潜在的性能问题和优化点
3. **安全性**：查找安全漏洞和风险点
4. **最佳实践**：是否遵循语言和框架的最佳实践
5. **错误处理**：异常处理是否完善
6. **测试覆盖**：是否需要添加测试用例
7. **文档注释**：代码注释是否清晰完整

请提供：
- 发现的问题列表（按优先级排序）
- 具体的改进建议和示例代码
- 重构建议（如果需要）`,
    tags: ['代码审查', '质量', '优化', '安全'],
    category: '开发工具',
  },
  {
    id: '5',
    title: '代码审查助手',
    description: '专业的代码审查提示词，帮助发现代码问题并提供改进建议',
    content: `请对以下代码进行专业的代码审查：

\`\`\`
{粘贴需要审查的代码}
\`\`\`

## 审查要点：
1. **代码质量**：检查代码结构、可读性和维护性
2. **性能优化**：识别潜在的性能问题和优化点
3. **安全性**：查找安全漏洞和风险点
4. **最佳实践**：是否遵循语言和框架的最佳实践
5. **错误处理**：异常处理是否完善
6. **测试覆盖**：是否需要添加测试用例
7. **文档注释**：代码注释是否清晰完整

请提供：
- 发现的问题列表（按优先级排序）
- 具体的改进建议和示例代码
- 重构建议（如果需要）`,
    tags: ['代码审查', '质量', '优化', '安全'],
    category: '开发工具',
  },
]
